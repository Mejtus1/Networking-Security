Net command 

specific to windows administration and maintance 
It is ued to manage network resources 
net help = gives us help about net command 

net help accounts = gives us help about net accounds 

net config = following running services can be controlled (server, workstation) 

net config server = information about server 
net command

Windows operating system includes a set of commands that are specific to Windows administration and maintenance = net command

NET ACCOUNTS             
NET HELPMSG             
NET STATISTICS
NET COMPUTER             
NET LOCALGROUP           
NET STOP
NET CONFIG               
NET PAUSE               
NET TIME
NET CONTINUE             
NET SESSION             
NET USE
NET FILE                 
NET SHARE               
NET USER
NET GROUP               
NET START               
NET VIEW
NET HELP
---------------------------------------------------------------------
Mounting a remote user drive
net use o: \\10.100.0.100\forensics 123Cisco123
\\10.100.0.100 = IP address
forensics = folder
123Cisco123 = password

net user = shows user accounts for our device
net user USER1 123Cisco123 /add

C:\Users\administrator.SFSNORT>net use z: \192.168.7.88\users /user:emendez

Enter the password for 'emendez' to connect to '192.168.7.88':

This command mounts a share to the remote host 192.168.7.88 and it connects to a share that is named “users.” When the share mounts, it will be mapped to the driver letter z:. So, the local users of this host will be able to use the remote share as if it were a locally connected disk drive.
----------------------------------------------------------------------
Controlling Startup Services
The Msconfig.exe tool allows you to control various aspects of the system configuration. Options are grouped as tabs in the following categories:

General: This group of settings allows you to control various options for starting up the system. The default is a normal startup, but you can choose a diagnostic startup or a selective startup where you can control whether to start system services, startup items or whether to use the original boot configuration.

Boot: If multiple versions of Windows are installed, you can choose which one to boot on startup. You also have options for controlling the safe boot mode, which is a boot process that is used for troubleshooting system issues. Safe boot mode is normally turned off to allow the system to perform a normal boot. 

Services: This section lists the services that are loaded in the system and their state: Stopped or Running. It also gives you the option to disable or enable the services, which will require a reboot to take effect.

Startup: This section lists the applications and services that are configured to automatically start at boot time. It also gives you the option to disable or enable the applications and services to start at boot time, which will require a reboot to take effect. 

Tools: This section lists the tools that ship with the operating system. You can launch the tools directly from this window.
-------------------------------------------------------------------------
Resource Monitor
Start menu->All Programs->Accessories->System Tools->Resource Monitor
- a detailed view of resource utilization on a system
- CPU, memory, disk, and network resources
When you select an item, expand each of the remaining sections to show utilization statistics for each of the resource categories
-------------------------------------------------------------------------
Windows BOOT process
There are 3 main phases of windows BOOT process: BIOS initialization, OS loader, operating system initialization 

During the BIOS initialization phase, the platform firmware identifies and initializes the hardware devices, and then runs a power-on self-test (POST). 
The POST process ends when the BIOS detects a valid system disk, reads the master boot record (MBR), and starts Bootmgr.exe. 
Bootmgr.exe finds and starts Winload.exe on the Windows boot partition, which begins the operating system Loader phase.

During the operating system loader phase, the Windows loader binary (Winload.exe) loads essential system drivers that are required to read minimal data from the disk, 
and initializes the system so the Windows kernel can begin execution.

During the operating system initialization phase, most of the operating system work occurs. This phase involves kernel initialization, 
Plug and Play activity, service start, login, and Explorer (desktop) initialization.

notes: 
The Windows boot process actually begins at system installation time. The Windows setup builds the structures that are necessary for the system to boot properly. 
Therefore, these structures must be in place for any subsequent successful system initializations to take place. There are also some differences in the boot sequence that take into account the type of BIOS that is in place. 
BIOS-based systems are essentially legacy but they are still very common. The newer type of BIOS is known as the extensible firmware interface (EFI). A more recent version of EFI, 
known as unified extensible firmware interface (UEFI), is rapidly becoming the new standard. 

When an instance of Windows is installed on a host, the setup application does some preliminary preparation of the disk that the system will boot from. 
It will use the first sector of the disk to create an area that is known as the master boot record (MBR), which contains some executable instructions and the partition table that is used to map out the structure of the disk. 
Once MBR is created and present on the system disk, the host can begin the boot process.

When the system boots, it executes code that is stored in the flash memory of the BIOS. The code that it executes is enough to identify the boot disk it will then 
communicate with and load the partition table information from the MBR into memory. It also transfers control to the executable code in the MBR to 
continue the boot sequence. With the partition table loaded into memory, the system can locate the Bootmgr file. When the Bootmgr is found, the MBR 
executable code transfers control to the Bootmgr. Bootmgr starts in “real mode,” which is the original MS-DOS memory model where programs ran in a 
memory space of 1MB. Bootmgr’s job is to switch the system to “protected mode,” which makes the remaining memory of the system available so the boot 
sequence can continue. If Bootmgr is not found at this point, the boot process will fail and the system will respond with the message Bootmgr not found.

Next, the Bootmgr reads the Boot Configuration Database (BCD) to read in any options that are required to start the system. The BCD also contains information 
about whether the system was put into hibernation the last time that it was used, rather than fully shut down. If a hibernation state is detected, the BCD redirects 
the boot process to execute Winresume.exe, which reads the hibernation file (Hiberfil.sys) to rebuild the state of the system to the state it had when it was put into hibernation.

At this point, Bootmgr executes Winload.exe to continue the boot sequence. The Winload.exe program queries the system BIOS to get information about devices connected to the system. 
The hardware information is held so the system knows what is there as the boot sequence continues and is later written to the registry so the system can have a record of the hardware 
configuration at boot time. Next, Winload.exe begins loading the files that are needed to start initializing the kernel. It will also begin reading in the device drivers of the hardware devices connected to the host. 

An important part of what Winload.exe does at this point is to enforce the Kernel Mode Code Signing (KMCS) infrastructure. The KMCS is there to ensure that all the drivers and components that Winload.exe reads in are 
digitally signed to maintain the security of the system as it boots. 

Systems that use UEFI BIOS do things a bit differently. In UEFI-based systems, the boot code is stored and executed in the UEFI firmware itself. 
Therefore, the system never goes into the real mode memory management system. Instead, it goes directly to protected mode, which improves the host’s security at boot time. 

Next, the Bo
The last thing Winload.exe does is call up Ntoskrnl to initialize the Windows kernel memory and set up the Hardware Abstraction Layer (HAL) so the 
system can communicate with the connected hardware. Once the kernel is initialized, control is handed off to the Session Manager Subsystem (SMSS), 
which is in charge of initializing the user environment. The SMSS reads in values from the registry files to prepare the system to present the environment 
in the state that it was last left in. The SMSS also invokes Winlogon at this point to wait for a user to log in. When a user successfully logs in, 
Winlogon reads the registry keys for the user to prepare the user’s desktop environment. 

-------------------------------------------------------------------------

netstat command 
- displays active TCP connections
netstat help for additional information 

netstat -r
- displays the routing dable (and active routes)
nestat -an 
(a = all network connections, n = display addresses and port numbers)
nestat -ans 
(s for protocol statistics)
netstat -e 
(send and recieved statistics for etherner interface)
netstat -nob 
(-n filters addresses and ports in numeric format)
(-o owner process ID that established this connection)
(-e indicates executable that was involved in creating connection or listening port)

-------------------------------------------------------------------------

Accessing Network Resources
- Microsoft pioneered the SMB protocol for sharing network resources
- primary uses of SMB is for accessing files or file systems on remote hosts
 \\servername\sharename\file 

Share name   Resource                        Remark
--------------------------------------------------------------
C$           C:\                             Default share
IPC$                                         Remote IPC
ADMIN$       C:\Windows                      Remote Admin
Users        C:\Users
- the share that represents the C: drive is called C$ 
- the ADMIN$ share points to the c:\windows directory 
- an administrative share that is called IPC$ is used for interprocess communications.

-------------------------------------------------------------------------
